# azure-pipelines.yml
# Validates (what-if) and deploys a resource-group scoped Bicep (VNet + subnets)

trigger:
  branches:
    include:
      - main
      - master

pr:
  branches:
    include:
      - "*"

variables:
  # >>>>>> EDIT THESE <<<<<<
  azureServiceConnection: 'tt-sc-azure'   # Azure DevOps service connection name
  resourceGroupName: 'rg-networking-dev-weu-01'      # Existing RG, pipeline won't create it
  location: 'westeurope'                           # Used by what-if if needed
  templateFile: 'infra/main.bicep'                       # Path to your Bicep file in repo
  parametersFile: 'infra/main.parameters.json'                # Path to your parameters (optional)

  # If you prefer inline parameters instead of a file, set useInlineParameters: 'true'
  useInlineParameters: 'false'

  # Inline parameters (used when useInlineParameters == 'true').
  # Make sure the JSON below is valid and single-line or use YAML folded style.
  vnetName: 'vnet-dev-weu'
  vnetAddressPrefixes: '["10.10.0.0/16"]'
  subnetsJson: >-
    [
      { "name": "snet-app",  "addressPrefix": "10.10.1.0/24" },
      { "name": "snet-data", "addressPrefix": "10.10.2.0/24" }
    ]

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Validate
    displayName: What-if (Validate)
    jobs:
      - job: WhatIf
        displayName: ARM What-if
        steps:
          - checkout: self

          - task: AzureCLI@2
            displayName: 'Azure CLI: what-if deployment'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                set -euo pipefail

                echo "Checking Bicep CLI availability…"
                az bicep install
                az bicep upgrade

                if [ "$(useInlineParameters)" = "true" ]; then
                  echo "Running WHAT-IF with inline parameters…"
                  az deployment group what-if \
                    --resource-group "$(resourceGroupName)" \
                    --template-file "$(templateFile)" \
                    --parameters \
                      vnetName="$(vnetName)" \
                      vnetAddressPrefixes='$(vnetAddressPrefixes)' \
                      subnets='$(subnetsJson)'
                else
                  echo "Running WHAT-IF with parameters file…"
                  if [ ! -f "$(parametersFile)" ]; then
                    echo "ERROR: parameters file '$(parametersFile)' not found."
                    exit 1
                  fi
                  az deployment group what-if \
                    --resource-group "$(resourceGroupName)" \
                    --template-file "$(templateFile)" \
                    --parameters @"$(parametersFile)"
                fi

  - stage: Deploy
    displayName: Deploy to Resource Group
    dependsOn: Validate
    jobs:
      - job: DeployRG
        displayName: Deploy VNet + Subnets
        steps:
          - checkout: self

          - task: AzureCLI@2
            displayName: 'Azure CLI: deploy'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                set -euo pipefail

                az bicep install
                az bicep upgrade

                DEPLOY_NAME="vnet-deploy-$(date +%s)"

                if [ "$(useInlineParameters)" = "true" ]; then
                  echo "Deploying with inline parameters…"
                  az deployment group create \
                    --name "$DEPLOY_NAME" \
                    --resource-group "$(resourceGroupName)" \
                    --template-file "$(templateFile)" \
                    --parameters \
                      vnetName="$(vnetName)" \
                      vnetAddressPrefixes='$(vnetAddressPrefixes)' \
                      subnets='$(subnetsJson)'
                else
                  echo "Deploying with parameters file…"
                  az deployment group create \
                    --name "$DEPLOY_NAME" \
                    --resource-group "$(resourceGroupName)" \
                    --template-file "$(templateFile)" \
                    --parameters @"$(parametersFile)"
                fi

                echo "Deployment completed."


